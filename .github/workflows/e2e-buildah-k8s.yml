on:
  pull_request:
    branches: [ main ]
  push:
    branches:
      - main
jobs:
  e2e_test:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '#gen') }}
    env:
      COMMIT_MSG: ${{ github.event.head_commit.message }}
      KIND_CL_NAME: e2e-test
    steps:
      - name: Set building engine
        run: |
          if [[ "$COMMIT_MSG" == *"gen"* ]]; then
            echo "ENGINE=buildah"
          else
            echo "ENGINE=kaniko"
          fi
          echo "Engine set: $ENGINE"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build the $ENGINE Poc
        working-directory: $ENGINE
        run: ./hack/build.sh

  kaniko_e2e_test:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '#kaniko') }}
    env:
      KIND_CL_NAME: e2e-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build the Kaniko Poc
        working-directory: kaniko
        run: ./hack/build.sh

      - name: Clean resident local docker
        if: ${{ env.ACT }}
        continue-on-error: true
        run: |
          for DIMG in "$KIND_CL_NAME-control-plane "; do
            docker stop $DIMG ; docker rm $DIMG ;
          done ;
          sleep 1

      - name: Create Kubernetes Kind Cluster
        uses: container-tools/kind-action@v1.7.0
        with:
          cluster_name: e2e-test
          registry: true

      - name: Tag and push the image
        run: |
          docker tag kaniko-app $KIND_REGISTRY/kaniko-app
          docker push $KIND_REGISTRY/kaniko-app

      - name: Deploy the kaniko job to perform a Dockerfile build
        working-directory: kaniko
        run: |
          kubectl apply -f ./k8s/manifest-cloud.yml
          sleep 10s
          kubectl get pods -n buildpack
          kubectl logs -n buildpack job/kaniko-poc -f --ignore-errors=true

      - name: "Wait till job's finished and check status: complete or failed"
        working-directory: buildah
        # ./hack/check_job_status.sh
        run: |
          while true; do
            if kubectl -n buildpack wait --timeout=300s --for=condition=complete job/kaniko-poc 2>/dev/null; then
              job_result=0
              break
            fi

            if kubectl -n buildpack wait --timeout=300s --for=condition=failed job/kaniko-poc 2>/dev/null; then
              job_result=1
              break
            fi

            kubectl -n buildpack get job/kaniko-poc -o yaml

            sleep 3
          done

          if [[ $job_result -eq 1 ]]; then
            echo "Job failed!"
            exit 1
          fi

          echo "Job succeeded"
          exit 0

      - name: Delete cluster
        run: kind delete cluster
  buildah_e2e_test:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '#buildah') }}
    env:
      KIND_CL_NAME: e2e-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build the Buildah Poc
        working-directory: buildah
        run: ./hack/build.sh

      - name: clean resident local docker
        if: ${{ env.ACT }}
        continue-on-error: true
        run: |
          for DIMG in "$KIND_CL_NAME-control-plane "; do
            docker stop $DIMG ; docker rm $DIMG ;
          done ;
          sleep 1

      - name: Create Kubernetes Kind Cluster
        uses: container-tools/kind-action@v1.7.0
        with:
          cluster_name: e2e-test
          registry: true

      - name: Tag and push the image
        run: |
          docker tag buildah-app $KIND_REGISTRY/buildah-app
          docker push $KIND_REGISTRY/buildah-app

      - name: Deploy the buildah job to perform a Dockerfile build
        working-directory: buildah
        run: |
          kubectl apply -f ./k8s/manifest-cloud.yml
          sleep 10s
          kubectl get pods -n buildpack
          kubectl logs -n buildpack job/buildah-poc -f --ignore-errors=true

      - name: "Wait till job's finished and check status: complete or failed"
        working-directory: buildah
        run: ./hack/check_job_status.sh

      - name: Delete cluster
        run: kind delete cluster

